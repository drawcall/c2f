{"version":3,"sources":["assets/image/logo.png","components/logo.jsx","components/coder.jsx","components/result-alert.jsx","service/message/message.js","service/convert/css/decls.js","service/utils/num.js","service/convert/css/split-mapping.js","service/convert/css/split-cssattr.js","service/convert/css/avatar.js","service/convert/css/parse.js","service/convert/flutter/template.js","service/convert/flutter/code-arr.js","service/convert/flutter/transform/unit.js","service/utils/unit.js","service/convert/flutter/transform/color.js","service/convert/flutter/transform/border.js","service/convert/flutter/transform/boxshadow.js","service/convert/flutter/transform/radian.js","service/convert/flutter/transform/transform.js","service/convert/flutter/transform/fontweight.js","service/convert/flutter/transform/constraints.js","service/convert/flutter/transform/border-radius.js","service/convert/flutter/transform/marginpadding.js","service/utils/camel.js","service/convert/flutter/transform/background-image.js","service/utils/pos.js","service/utils/str.js","service/convert/flutter/transform.js","service/convert/flutter/widget.js","service/convert/flutter/parse.js","service/convert/converter.js","components/operating-area.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","className","alt","src","logo","width","style","padding","href","rel","target","require","Coder","editor","data","value","this","props","onChange","react_codemirror2","options","Object","assign","theme","tabSize","lineNumbers","bind","React","Component","ResultAlert","message","config","duration","maxCount","first","showMessage","type","msg","success","error","Message","Decls","classCallCheck","decls","key","_ref","val","_ref$valueList","valueList","_ref$data","push","length","func","forEach","decl","index","add","i","splice","defaultVal","cloneDecls","clone","isNone","trim","toNum","isNumber","r","exec","concat","parseFloat","toNumber","SPLIT_MAPPING","background","border-radius","text-decoration","border","margin","font","splitByMainStyle","mainStyle","css","subStyles","arguments","undefined","getVal","allStyle","getAllStyle","$","removeClass","removeAttr","addValToDecls","remove","getStyleVal","getAvatarStyle","splitCssAttr","parseCssDecls","root","Promise","resolve","reject","walkDecls","list","postcss","space","prop","setTimeout","PROP","CHILDREN","DECO","CONTAINER","TEXT","POSITIONED","OPACITY","CodeArr","arr","lines","code","getIndexOf","enabled","indexOf","n","tabs","tag","newCode","cloneLines","nspace","join","getTabs","split","line","toFunit","test","toString","isNumerical","isPercentage","isPixel","isInteger","isEm","isRem","isPt","toFColor","c16","color","hex","replace","e","toFBorder","toColor","toArray","str","slice","toBoxShadow","x","y","offset","blurRadius","allStr","toRadian","findFromProp","name","formatVal","strArr","v","ppo","floor","newVal","toFTransform","skew","scale","rotate","translate","matrixval","toFFontWeight","toConstraints","bcVal","maxWidth","minWidth","maxHeight","minHeight","toFBorderRadius","tl","tr","br","bl","toFMarginPadding","top","right","bottom","left","toCamel","$0","$1","toUpperCase","toDecorationImage","size","repeat","position","result","toNameVal","addQuotes","match","inSplitStyles","sign","transfromToCamelKey","transform","mainStyleKey","camelKey","Widget","children","parent","id","uuid","template","codeString","prop2","decoration","codelines","child","loop","addChild","depth","okey","oval","_transform","_transform2","_transform3","RegExp","codeArr","getDepth","childStr","replaceTag","isNull","TAG","childToCodeString","propToCodeString","prop2ToCodeString","decorationToCodeString","selfToCodeString","clearAllPseudoTags","clearBlankLines","isText","isDecoration","isPositioned","isOpacity","parseFlutter","widget","cache","setProp","addChildTo","setProp2","setDecoration","getRoot","convert2Flutter","asyncToGenerator","regenerator_default","mark","_callee","ast","flutterStyle","wrap","_context","prev","next","process","sent","abrupt","t0","dumpLogError","stop","_x","apply","err","console","log","stack","OperatingArea","_this","_super","call","cssOptions","mode","dartOptions","cssVal","dartVal","convertAndUpdateDartCoder","updateCoder","setState","result_alert","row","col","span","coder","codeChangeHadler","es_button","onClick","clearBtnClickHandler","convertBtnClickHandler","Content","Layout","App","layout","components_logo","operating_area","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.440a81fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5857ad01.png\";","import React from \"react\";\nimport logo from \"../assets/image/logo.png\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo\">\n      <div className=\"title\">\n        <img alt=\"\" src={logo} width={100} /> Convert css style to flutter style\n      </div>\n      <div>\n        Source code is here\n        <a\n          style={{ padding: 6 }}\n          href=\"https://github.com/tnfe/c2f\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          https://github.com/tnfe/c2f\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\n\nrequire(\"codemirror/lib/codemirror.css\");\nrequire(\"codemirror/theme/material.css\");\nrequire(\"codemirror/theme/monokai.css\");\nrequire(\"codemirror/mode/css/css.js\");\nrequire(\"codemirror/mode/dart/dart.js\");\n\nclass Coder extends React.Component {\n  onChange(editor, data, value) {\n    this.props.onChange && this.props.onChange(value);\n  }\n\n  render() {\n    return (\n      <CodeMirror\n        className=\"code-mirror\"\n        value={this.props.value || \"\"}\n        options={Object.assign(\n          {\n            theme: \"monokai\",\n            tabSize: 2,\n            lineNumbers: true\n          },\n          this.props.options\n        )}\n        onChange={this.onChange.bind(this)}\n      />\n    );\n  }\n}\n\nexport default Coder;\n","import React from \"react\";\nimport { Alert } from \"antd\";\n\nclass ResultAlert extends React.Component {\n  render() {\n    return (\n      <div>\n        {false ? (\n          <Alert message=\"Alert Message Text\" type=\"success\" banner />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ResultAlert;\n","import { message } from \"antd\";\n\nmessage.config({\n  duration: 1,\n  maxCount: 3\n});\n\nlet first = true;\nconst showMessage = (type, msg) => {\n  if (first) {\n    first = false;\n    return;\n  }\n\n  if (type === \"success\") message.success(msg);\n  else message.error(msg);\n};\n\nconst Message = {\n  success(msg) {\n    showMessage(\"success\", msg);\n  },\n  error(msg) {\n    showMessage(\"error\", msg);\n  }\n};\n\nexport default Message;\n","import clone from \"lodash/clone\";\n\nclass Decls {\n  constructor() {\n    this.decls = [];\n  }\n\n  add({ key, val, valueList = null, data = null }) {\n    this.decls.push({ data, valueList, key, val });\n  }\n\n  isNull() {\n    return this.decls.length === 0;\n  }\n\n  forEach(func) {\n    this.decls.forEach((decl, index) => func(decl, index));\n  }\n\n  merge(decls) {\n    for (let key in decls) {\n      this.add({\n        key,\n        val: decls[key]\n      });\n    }\n  }\n\n  remove(key) {\n    for (let i = this.decls.length - 1; i >= 0; i--) {\n      if (this.decls[i][\"key\"] === key) {\n        this.decls.splice(i, 1);\n      }\n    }\n  }\n\n  getVal(key, defaultVal) {\n    let val = null;\n    this.decls.forEach(decl => {\n      if (decl.key === key) val = decl.val;\n    });\n\n    return val || defaultVal;\n  }\n\n  clone() {\n    const cloneDecls = new Decls();\n    cloneDecls.decls = clone(this.decls);\n\n    return cloneDecls;\n  }\n}\n\nexport default Decls;\n","import toNumber from \"lodash/toNumber\";\nimport isNumber from \"lodash/isNumber\";\n\nconst isMulti = key => {\n  if (key.indexOf(\"|\") > 0) return true;\n  else return false;\n};\n\nconst findSimilarNumber = (n, rule) => {\n  if (rule[n + \"\"]) return n;\n\n  const nums = [];\n  for (let key in rule) {\n    nums.push(parseInt(key));\n  }\n  nums.sort((n1, n2) => n2 - n1);\n\n  for (let i = 0; i < nums.length; i++) {\n    const num = nums[i];\n    if (n > num) return num;\n  }\n\n  return 0;\n};\n\nconst isNone = val => {\n  if (!val) return true;\n\n  if (typeof val === \"string\") {\n    if (val.trim() === \"\") return true;\n    if (val === \"null\") return true;\n    if (val === \"none\") return true;\n    if (val === \"inhert\") return true;\n  }\n\n  return false;\n};\n\nconst toNum = val => {\n  if (isNumber(val)) return val;\n\n  const r = /([0-9]+)[a-zA-Z%]/gi.exec(`${val}c`);\n  if (r && r.length >= 2) {\n    val = r[1];\n    val = isNumber(val) ? val : parseFloat(val);\n\n    return val;\n  } else {\n    return toNumber(val);\n  }\n};\n\nexport { isMulti, isNone, toNum, findSimilarNumber };\n","const SPLIT_MAPPING = {\n  background: [\n    \"background-color\",\n    \"background-image\",\n    \"background-position\",\n    \"background-size\",\n    \"background-repeat\"\n  ],\n\n  \"border-radius\": [\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-left-radius\"\n  ],\n\n  \"text-decoration\": [\n    \"text-decoration-line\",\n    \"text-decoration-style\",\n    \"text-decoration-color\"\n  ],\n\n  border: [\"border-width\", \"border-style\", \"border-color\"],\n\n  padding: [\"padding-top\", \"padding-right\", \"padding-bottom\", \"padding-left\"],\n\n  margin: [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"],\n\n  font: [\n    \"font-style\",\n    \"font-weight\",\n    \"font-size\",\n    \"font-family\"\n  ]\n};\n\nexport default SPLIT_MAPPING;\n","////////////////////////////////////////////////////////////////\n//\n//  Jquery is used here because it is a nice style parser.\n//\n////////////////////////////////////////////////////////////////\n\nimport { isNone } from \"../../utils/num\";\nimport SPLIT_MAPPING from \"./split-mapping\";\nimport { getAvatarStyle, setAvatarStyle } from \"./avatar\";\n\nconst splitCssAttr = decls => {\n  if (!decls) return null;\n\n  let cloneDecls = decls.clone();\n  for (let mainStyle in SPLIT_MAPPING) {\n    cloneDecls = splitByMainStyle(cloneDecls, mainStyle, SPLIT_MAPPING[mainStyle]);\n  }\n\n  return cloneDecls;\n};\n\nconst splitByMainStyle = (decls, mainStyle, subStyles = []) => {\n  const val = decls.getVal(mainStyle);\n  if (val) {\n    const allStyle = getAllStyle(decls);\n    setAvatarStyle(allStyle);\n    subStyles.forEach(style => addValToDecls(decls, style));\n    decls.remove(mainStyle);\n  }\n\n  return decls;\n};\n\nconst addValToDecls = (decls, key) => {\n  const val = getStyleVal(decls, key);\n  if (!isNone(val)) decls.add({ key, val });\n};\n\nconst getStyleVal = (decls, key) => {\n  let val = getAvatarStyle(key);\n  if (isNone(val)) val = decls.getVal(key);\n  return val;\n};\n\nconst getAllStyle = decls => {\n  const style = {};\n  decls.forEach(decl => {\n    const key = decl[\"key\"];\n    const val = decl[\"val\"];\n    style[key] = val;\n  });\n  return style;\n};\n\nexport default splitCssAttr;\n","import $ from \"jquery\";\n\nconst setAvatarStyle = css => {\n  $(\"#avator\")\n    .removeClass()\n    .removeAttr(\"style\")\n    .css(css);\n};\n\nconst getAvatarStyle = key => {\n  return $(\"#avator\").css(key);\n};\n\nexport { getAvatarStyle, setAvatarStyle };\n","import postcss from \"postcss\";\nimport Decls from \"./decls\";\nimport splitCssAttr from \"./split-cssattr\";\n\nconst parseCssDecls = root => {\n  if (!root) return null;\n\n  return new Promise(function (resolve, reject) {\n    const decls = new Decls();\n\n    root.walkDecls(decl => {\n      const list = postcss.list.space(decl.value);\n\n      decls.add({\n        key: decl.prop,\n        val: decl.value,\n        data: decl,\n        valueList: list\n      });\n    });\n\n\n    setTimeout((decls) => {\n      decls = splitCssAttr(decls);\n      resolve(decls)\n    }, 80, decls);\n  });\n};\n\nexport default parseCssDecls;\n","const PROP = \"<-prop->\";\nconst PROP2 = \"<-prop2->\";\nconst CLASS = \"<-class->\";\nconst CHILDREN = \"<-children->\";\nconst DECO = \"<-decoration->\";\nconst TAB = \"<-tab->\";\nconst REAL_SPACE = \"  \";\n\nconst CONTAINER = `\n Container(\n  ${CHILDREN}\n  ${PROP}\n  ${DECO}\n),\n`.trim();\n\nconst TEXT = `\n Text(\n  \"Hello World\",\n  style: TextStyle(\n    ${PROP}\n  ),\n  ${PROP2}\n),\n`.trim();\n\nconst CENTER = `\n Center(\n  ${CHILDREN}\n  ${PROP}\n),\n`.trim();\n\nconst POSITIONED = `\n Positioned(\n  ${CHILDREN}\n  ${PROP}\n),`;\n\nconst OPACITY = `\n Opacity(\n  ${CHILDREN}\n  ${PROP}\n),`;\n\nexport { CONTAINER, TEXT, CHILDREN, DECO, CLASS, PROP, PROP2, CENTER, TAB, POSITIONED, OPACITY, REAL_SPACE };\n","/////////////////////////////////////////////////////////\n//\n//\tCodeArr\n//\t[\n//   \"new Container(\" ,\n//\t \"  child: new Text(\" ,\n//\t \"    \"Hello World\",\"\n//  ]\n//\n/////////////////////////////////////////////////////////\nimport { TAB } from \"./template\";\nimport clone from \"lodash/clone\";\n\nclass CodeArr {\n  constructor(arr) {\n    this.lines = arr || [];\n  }\n\n  add(key, code) {\n    const index = this.getIndexOf(key);\n    if (index > -1) {\n      this.lines[index] = code;\n    } else {\n      this.lines.push(code);\n    }\n    this.enabled = true;\n  }\n\n  isNull() {\n    return this.lines.length === 0;\n  }\n\n  getIndexOf(key) {\n    for (let i = 0; i < this.lines.length; i++) {\n      if (this.lines[i].indexOf(`${key}:`) > -1) return i;\n    }\n    return -1;\n  }\n\n  getTabs(n) {\n    let tabs = \"\";\n    for (let i = 0; i < n; i++) tabs += TAB;\n    return tabs;\n  }\n\n  replaceTag(tag, newCode) {\n    const cloneLines = clone(this.lines);\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const code = this.lines[i];\n      if (code.indexOf(tag) > -1) {\n        cloneLines.splice(i, 0, newCode);\n      }\n    }\n    this.lines = cloneLines;\n  }\n\n  toString(nspace = 0) {\n    if (nspace === 0) {\n      return this.lines.join(\"\\n\");\n    } else {\n      const tabs = this.getTabs(nspace);\n      const str = this.lines.join(\"\\n\");\n      const arr = str.split(/\\n/g);\n      arr.forEach((line, index) => (arr[index] = tabs + line));\n\n      return arr.join(\"\\n\");\n    }\n  }\n}\n\nexport default CodeArr;\n","import isNumber from \"lodash/isNumber\";\nimport isInteger from \"lodash/isInteger\";\nimport { toNum } from \"../../../utils/num\";\nimport { isNumerical, isPercentage, isPixel, isEm, isRem, isPt } from \"../../../utils/unit\";\n\nconst toFunit = val => {\n  if (isNumber(val)) return val;\n\n  val += \"\";\n\n  // like \"250\"\n  if (isNumerical(val)) {\n    return toNum(val);\n  }\n\n  // like 50%\n  else if (isPercentage(val)) {\n    val = toNum(val) / 100;\n    return `_parent_ * ${val} // percentage of parent width. like 'MediaQuery.of(context).size.width * 0.2'`;\n  }\n\n  // like 120px\n  else if (isPixel(val)) {\n    val = toNum(val);\n    val = isInteger(val) ? `${val}.0` : `${val}`;\n    return val;\n  }\n\n  // like 3.2em\n  else if (isEm(val)) {\n    val = toNum(val);\n    return `_parent_font_width_ * ${val} // https://www.w3.org/Style/Examples/007/units`;\n  }\n\n  // like 10rem\n  else if (isRem(val)) {\n    val = toNum(val);\n    return `_root_font_width_ * ${val} // https://www.w3.org/Style/Examples/007/units`;\n  }\n\n  // like 12pt\n  else if (isPt(val)) {\n    val = toNum(val);\n    return `${val} * 72 / _dpi_ // pt = px * dpi / 72`;\n  } else {\n    return 0;\n  }\n};\n\nexport default toFunit;\n","const isNumerical = val => /^([0-9]+)$/gi.test(val.toString());\n\nconst isPercentage = val => /([0-9]+)%$/gi.test(val);\n\nconst isPixel = val => /([0-9]+)(px|dpx)$/gi.test(val);\n\nconst isEm = val => /([0-9]+)em$/gi.test(val);\n\nconst isRem = val => /([0-9]+)rem$/gi.test(val);\n\nconst isPt = val => /([0-9]+)pt$/gi.test(val);\n\nexport { isNumerical, isPercentage, isPixel, isPt, isEm, isRem };\n","import color from \"color\";\n\nconst toFColor = val => {\n  try {\n    const c16 = color(val)\n      .hex()\n      .replace(/^#/, \"0x\");\n\n    return `Color(${c16}00)`;\n  } catch (e) {\n    const c16 = (val + \"\").replace(/^#/, \"0x\");\n    return `Color(${c16}00)`;\n  }\n};\n\nexport default toFColor;\n","import toFunit from \"./unit\";\nimport toColor from \"./color\";\n\nconst toFBorder = (val, decls) => {\n  let width = decls.getVal(\"border-width\", \"1px\");\n  let color = decls.getVal(\"border-color\", \"blue\");\n  let style = decls.getVal(\"border-style\", \"solid\");\n  \n  width = toFunit(width);\n  color = toColor(color);\n\n  return `\nnew Border.all(\n  color: ${color},\n  width: ${width},\n  style: BorderStyle.${style}\n)`.trim();\n};\n\nexport default toFBorder;\n","import toFunit from \"./unit\";\nimport toColor from \"./color\";\n\n// 0 2px 4px rgba(0, 0, 0, 0.8);\nconst toBoxShadow = val => {\n  val = toArray(val);\n  \n  const x = toFunit(val[0]);\n  const y = toFunit(val[0]);\n  const offset = `Offset(${x}, ${y})`;\n  const color = toColor(val[3] || \"#000\");\n  const blurRadius = toFunit(val[2] || 10);\n\n  const allStr = `\n  BoxShadow (\n    color: ${color},\n    offset: ${offset},\n    blurRadius: ${blurRadius},\n  ),`;\n\n  return `\n<BoxShadow>[\n${allStr}\n]`.trim();\n};\n\nconst toArray = val => {\n  let arr = val.trim().split(\" \");\n  if (arr.length > 4) {\n    let str = \"\";\n    for (let i = 3; i < arr.length; i++) {\n      str += arr[i];\n    }\n\n    arr = arr.slice(0, 4);\n    arr[3] = str;\n  }\n\n  return arr;\n};\n\nexport default toBoxShadow;\n","const toRadian = val => {\n  return (val * 3.1415927) / 180;\n};\n\nexport default toRadian;\n","import ppo from \"ppo\";\nimport toRadian from \"./radian\";\nimport { toNum } from \"../../../utils/num\";\n\n// skewX(25deg) rotate3d(180deg,0,1) scale3d(2,2,1) translate3d(10px,10px,0px);\nconst toFTransform = val => {\n  val = val.split(\" \");\n\n  let skew = findFromProp(\"skew\", val);\n  let scale = findFromProp(\"scale\", val);\n  let rotate = findFromProp(\"rotate\", val);\n  let translate = findFromProp(\"translate\", val);\n\n  let matrixval = \"\";\n  skew = formatVal(\"skew\", skew);\n  scale = formatVal(\"scale\", scale);\n  rotate = formatVal(\"rotate\", rotate);\n  translate = formatVal(\"translate\", translate);\n\n  if (skew) matrixval += `${skew}..`;\n  if (scale) matrixval += `${scale}..`;\n  if (rotate) matrixval += `${rotate}..`;\n  if (translate) matrixval += `${translate}..`;\n\n  matrixval = matrixval.replace(/\\.\\.$/g, \"\");\n\n  return `Matrix4.${matrixval}`;\n};\n\nconst findFromProp = (name, arr) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].indexOf(name) > -1) {\n      return arr[i];\n    }\n  }\n  return null;\n};\n\nconst formatVal = (key, val) => {\n  const r = /[a-zA-Z]+\\((.*)\\)/.exec(val);\n  if (r && r.length >= 2) {\n    let str = r[1];\n    let strArr = str.split(\",\");\n    let arr = [];\n\n    if (key === \"rotate\") {\n      let v = str.toString().replace(/deg$/g, \"\");\n      v = toRadian(v);\n      v = ppo.floor(v, 3);\n      val = val.replace(str, v);\n    } else {\n      strArr.forEach(n => {\n        n = toNum(n);\n        arr.push(n);\n      });\n      const newVal = arr.join(\",\");\n      val = val.replace(\"3d\", \"\").replace(str, newVal);\n    }\n  }\n\n  return val;\n};\n\nexport default toFTransform;\n","//import toNumber from \"lodash/toNumber\";\n\nconst toFFontWeight = val => {\n  if (val === \"bold\" || val === \"normal\") {\n    return `FontWeight.${val}`;\n  } else if (/^[1-9]00/.test(val + \"\")) {\n    return `FontWeight.w${val}`;\n  } else {\n    return `FontWeight.normal`;\n  }\n};\n\nexport default toFFontWeight;\n","import toFunit from \"./unit\";\n\nconst toConstraints = (val, decls) => {\n  let bcVal = \"\";\n  let maxWidth = decls.getVal(\"max-width\");\n  let minWidth = decls.getVal(\"min-width\");\n  let maxHeight = decls.getVal(\"max-height\");\n  let minHeight = decls.getVal(\"min-height\");\n\n  if (maxWidth) {\n    bcVal += `maxWidth: ${toFunit(maxWidth)}`;\n  }\n\n  if (minWidth) {\n    bcVal += `, minWidth: ${toFunit(minWidth)}`;\n  }\n\n  if (maxHeight) {\n    bcVal += `, maxHeight: ${toFunit(maxHeight)}`;\n  }\n\n  if (minHeight) {\n    bcVal += `, minHeight: ${toFunit(minHeight)}`;\n  }\n\n  return `BoxConstraints(${bcVal})`;\n};\n\nexport default toConstraints;\n","import toFunit from \"./unit\";\n\nconst toFBorderRadius = (val, decls) => {\n  let tl = decls.getVal(\"border-top-left-radius\", 0);\n  let tr = decls.getVal(\"border-top-right-radius\", 0);\n  let br = decls.getVal(\"border-bottom-right-radius\", 0);\n  let bl = decls.getVal(\"border-bottom-left-radius\", 0);\n\n  if (tl === tr && tr === br && br === bl) {\n    if (tl === \"50%\") {\n      return `BoxShape.circle`;\n    } else {\n      return `BorderRadius.all(const Radius.circular(${toFunit(tl)}),)`;\n    }\n  } else {\n    let tl = toFunit(val[0]);\n    let tr = toFunit(val[1]);\n    let br = toFunit(val[2]);\n    let bl = toFunit(val[3]);\n\n    tl = `topLeft: Radius.circular(${tl})`;\n    tr = `topRight: Radius.circular(${tr})`;\n    br = `bottomRight: Radius.circular(${br})`;\n    bl = `bottomLeft: Radius.circular(${bl})`;\n\n    return `BorderRadius.only(${tl}, ${tr}, ${br}, ${bl})`;\n  }\n};\n\nexport default toFBorderRadius;\n","import toFunit from \"./unit\";\n\nconst toFMarginPadding = (key, val, decls) => {\n  let top = decls.getVal(`${key}-top`, 0);\n  let right = decls.getVal(`${key}-right`, 0);\n  let bottom = decls.getVal(`${key}-bottom`, 0);\n  let left = decls.getVal(`${key}-left`, 0);\n\n  if (top === right && right === bottom && bottom === left) {\n    top = toFunit(top);\n\n    return `const EdgeInsets.all(${top})`;\n  } else {\n    top = toFunit(top);\n    right = toFunit(right);\n    bottom = toFunit(bottom);\n    left = toFunit(left);\n\n    return `const EdgeInsets.only(top: ${top}, right: ${right}, bottom: ${bottom}, left: ${left})`;\n  }\n};\n\nexport default toFMarginPadding;\n","const toCamel = val => {\n  let re = /-(\\w)/g;\n  return val.replace(re, function ($0, $1) {\n    return $1.toUpperCase();\n  });\n};\n\nexport default toCamel;\n","import toCamel from \"../../../utils/camel\";\nimport { toNameVal } from \"../../../utils/pos\";\n\nconst toDecorationImage = (val, decls) => {\n  val += \"\";\n  val = val.replace(/^url\\(/g, \"\").replace(/\\)$/g, \"\");\n  if (!/^('|\")/.test(val)) {\n    val = `\"${val}\"`;\n  }\n\n  const size = decls.getVal(\"background-size\", \"cover\");\n  let repeat = decls.getVal(\"background-repeat\", \"no-repeat\");\n  repeat = toCamel(repeat);\n  let position = decls.getVal(\"background-position\", \"center\");\n  position = toNameVal(position);\n\n  return `\nnew DecorationImage(\n  image: new ExactAssetImage(${val}),\n  fit: BoxFit.${size},\n  repeat: ImageRepeat.${repeat},\n)`.trim();\n};\n\nexport default toDecorationImage;\n","import toCamel from \"./camel\";\n\nconst isPercentage = val => {\n  if (val.indexOf(\"%\") > 0) {\n    return true;\n  }\n  return false;\n};\n\nconst isName = val => {\n  const keynames = \"left|center|bottom|top|right\".split(\"|\");\n  for (let i = 0; i < keynames.length; i++) {\n    if (val.indexOf(keynames[i]) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// 0% 50% -> leftCenter\n// center left -> centerLeft\nconst toNameVal = val => {\n  let result = \"\";\n  if (isPercentage(val)) {\n    const arr = val.split(\" \");\n    for (let i = 0; i < arr.length; i++) {\n      if (i === 0) {\n        if (arr[i] === \"0%\") {\n          result += \"top\";\n        } else if (arr[i] === \"50%\") {\n          result += \"center\";\n        } else {\n          result += \"bottom\";\n        }\n      } else {\n        if (arr[i] === \"0%\") {\n          result += \"-left\";\n        } else if (arr[i] === \"50%\") {\n          result += \"-center\";\n        } else {\n          result += \"-right\";\n        }\n      }\n    }\n  } else {\n    result.replace(/\\s/gi, \"-\");\n  }\n\n  result = toCamel(result);\n  result = result === \"centerCenter\" ? \"center\" : result;\n  return result;\n};\n\nexport { isPercentage, isName, toNameVal };\n","const addQuotes = str => {\n  if (!/^(\"|')/gi.test(str)) {\n    str = `\"${str}\"`;\n  }\n  return str;\n};\n\nexport default addQuotes;\n","import toFunit from \"./transform/unit\";\nimport toFColor from \"./transform/color\";\nimport toFBorder from \"./transform/border\";\nimport toBoxShadow from \"./transform/boxshadow\";\nimport toFTransform from \"./transform/transform\";\nimport toFFontWeight from \"./transform/fontweight\";\nimport toConstraints from \"./transform/constraints\";\nimport toFBorderRadius from \"./transform/border-radius\";\nimport toFMarginPadding from \"./transform/marginpadding\";\nimport toDecorationImage from \"./transform/background-image\";\nimport SPLIT_MAPPING from \"../css/split-mapping\";\nimport addQuotes from \"../../utils/str\";\nimport toCamel from \"../../utils/camel\";\n\nconst transform = (key, val, decls) => {\n  const result = { key: null, val };\n\n  switch (true) {\n    // background-image color ------------------------\n    case match(key, \"background-image\"):\n      result[\"key\"] = \"image\";\n      result[\"val\"] = toDecorationImage(val, decls);\n      break;\n\n    case match(key, \"background-color\", \"color\"):\n      result[\"val\"] = toFColor(val);\n      if (val === \"rgba(0, 0, 0, 0)\") {\n        result[\"key\"] = null;\n      } else {\n        result[\"key\"] = \"color\";\n      }\n\n      break;\n\n    // width & height ------------------------\n    case match(key, \"width\", \"height\"):\n      result[\"key\"] = key;\n      result[\"val\"] = toFunit(val);\n      break;\n\n    // left & right ------------------------\n    case match(key, \"top\", \"right\", \"left\", \"bottom\"):\n      result[\"key\"] = key;\n      result[\"val\"] = toFunit(val);\n      break;\n\n    // max-width & min-width ------------------------\n    case match(key, \"max-width\", \"min-width\"):\n    case match(key, \"max-height\", \"min-height\"):\n      result[\"key\"] = \"constraints\";\n      result[\"val\"] = toConstraints(val, decls);\n      break;\n\n    // text decoration style ------------------------\n    case match(key, \"text-decoration-line\"):\n      result[\"val\"] = `TextDecoration.${toCamel(val)}`;\n      break;\n\n    case match(key, \"text-decoration-color\"):\n      result[\"val\"] = toFColor(val);\n      break;\n\n    case match(key, \"text-decoration-style\"):\n      result[\"val\"] = `TextDecorationStyle.${val}`;\n      break;\n\n    case match(key, \"text-align\"):\n      result[\"val\"] = `TextAlign.${val}`;\n      break;\n\n    case match(key, \"font-style\"):\n      result[\"val\"] = `FontStyle.${val}`;\n      break;\n\n    case match(key, \"font-weight\"):\n      result[\"val\"] = toFFontWeight(val);\n      break;\n\n    case match(key, \"font-size\"):\n    case match(key, \"letter-spacing\"):\n      result[\"val\"] = toFunit(val);\n      break;\n\n    case match(key, \"font-family\"):\n      result[\"val\"] = addQuotes(val);\n      break;\n\n    // padding margin ------------------------\n    case match(key, \"padding\", \"margin\"):\n      const mainStyleKey = key.replace(/-[a-zA-Z]+$/, \"\");\n      result[\"key\"] = mainStyleKey;\n      result[\"val\"] = toFMarginPadding(mainStyleKey, val, decls);\n      break;\n\n    // align items ------------------------\n    case match(key, \"align-items\"):\n      result[\"key\"] = \"alignment\";\n      result[\"val\"] = `Alignment.${val}`;\n      break;\n\n    // transform ------------------------\n    case match(key, \"transform\"):\n      result[\"key\"] = \"transform\";\n      result[\"val\"] = toFTransform(val);\n      break;\n\n    // border related ------------------------\n    case match(key, \"border-radius\"):\n      result[\"val\"] = toFBorderRadius(val, decls);\n      result[\"key\"] = result[\"val\"] === \"BoxShape.circle\" ? \"shape\" : \"borderRadius\";\n      break;\n\n    case match(key, \"border\"):\n      result[\"key\"] = \"border\";\n      result[\"val\"] = toFBorder(val, decls);\n      break;\n\n    // box-shadow ------------------------\n    case match(key, \"box-shadow\"):\n      result[\"key\"] = \"boxShadow\";\n      result[\"val\"] = toBoxShadow(val);\n      break;\n\n    // opacity ------------------------\n    case match(key, \"opacity\"):\n      result[\"key\"] = key;\n      result[\"val\"] = val;\n      break;\n\n    default:\n      // Didn't match any test\n      break;\n  }\n\n  // to camel key\n  const camelKey = transfromToCamelKey(key);\n  if (camelKey) result[\"key\"] = camelKey;\n\n  return result;\n};\n\n/////////////////////////////////////////////////////////\n//\n//\tmatch key\n//\n/////////////////////////////////////////////////////////\nconst match = (key, ...rest) => {\n  for (let i = 0; i < rest.length; i++) {\n    if (key === rest[i]) return true;\n    if (inSplitStyles(key, rest[i])) return true;\n  }\n\n  return false;\n};\n\nconst inSplitStyles = (key, sign) => {\n  const subStyles = SPLIT_MAPPING[sign];\n  if (!subStyles) return null;\n\n  for (let i = 0; i < subStyles.length; i++) {\n    if (key === subStyles[i]) return sign;\n  }\n  return null;\n};\n\n/////////////////////////////////////////////////////////\n//\n//\ttransfrom camel key\n//\n/////////////////////////////////////////////////////////\nconst transfromToCamelKey = key => {\n  if (key === \"letter-spacing\") {\n    return toCamel(key);\n  }\n\n  if (/^font-[a-zA-Z]+/gi.test(key) || /^text-[a-zA-Z]+/gi.test(key)) {\n    return toCamel(key);\n  }\n\n  if (/^text-decoration.*/gi.test(key)) {\n    return toCamel(key.replace(/^text-/gi, \"\"));\n  }\n\n  return null;\n};\n\nexport default transform;\n","import ppo from \"ppo\";\nimport CodeArr from \"./code-arr\";\nimport transform from \"./transform\";\nimport { CONTAINER, TEXT, CHILDREN, TAB, CLASS, PROP, PROP2, DECO, OPACITY, POSITIONED, REAL_SPACE } from \"./template\";\nclass Widget {\n  constructor(type) {\n    this.children = [];\n    this.type = type;\n    this.decls = null;\n    this.parent = null;\n    this.id = ppo.uuid();\n\n    switch (type) {\n      case \"container\":\n        this.template = CONTAINER;\n        break;\n\n      case \"position\":\n        this.template = POSITIONED;\n        break;\n\n      case \"opacity\":\n        this.template = OPACITY;\n        break;\n\n      case \"text\":\n        this.template = TEXT;\n        break;\n\n      default:\n        this.template = CONTAINER;\n    }\n\n    this.codeString = \"\";\n    this.prop = new CodeArr();\n    this.prop2 = new CodeArr();\n    this.decoration = new CodeArr();\n    this.codelines = new CodeArr(this.template.split(/\\n/g));\n  }\n\n  addChild(child) {\n    if (this.children.indexOf(child) < 0) {\n      this.children.push(child);\n      child.parent = this;\n    }\n  }\n\n  addChildTo(parent) {\n    if (this.parent === parent) return;\n\n    const loop = target => {\n      if (!target.parent) {\n        parent.addChild(target);\n      } else {\n        loop(target.parent);\n      }\n    };\n\n    this.root = parent;\n    loop(this);\n  }\n\n  getRoot() {\n    return this.root || this;\n  }\n\n  getDepth() {\n    let depth = 0;\n    const loop = target => {\n      if (target.parent) {\n        depth++;\n        loop(target.parent);\n      }\n    };\n    loop(this);\n\n    return depth;\n  }\n\n  /// set prop --------------------------------\n  setProp(okey, oval) {\n    let { key, val } = transform(okey, oval, this.decls);\n    if (!key) return;\n\n    const code = this.type === \"text\" ? `    ${key}: ${val},` : `${key}: ${val},`;\n    this.prop.add(key, code);\n  }\n\n  /// set prop2 --------------------------------\n  setProp2(okey, oval) {\n    let { key, val } = transform(okey, oval, this.decls);\n    if (!key) return;\n    const code = this.type === \"text\" ? `  ${key}: ${val},` : `${key}: ${val},`;\n    this.prop2.add(key, code);\n  }\n\n  /// set Decoration --------------------------------\n  setDecoration(okey, oval) {\n    let { key, val } = transform(okey, oval, this.decls);\n    if (!key) return;\n\n    const code = `${key}: ${val},`;\n    this.decoration.add(key, code);\n  }\n\n  clearAllPseudoTags() {\n    this.codeString = this.codeString\n      .replace(new RegExp(CHILDREN, \"g\"), \"\")\n      .replace(new RegExp(CLASS, \"g\"), \"\")\n      .replace(new RegExp(PROP, \"g\"), \"\")\n      .replace(new RegExp(PROP2, \"g\"), \"\")\n      .replace(new RegExp(DECO, \"g\"), \"\")\n      .replace(new RegExp(TAB, \"g\"), REAL_SPACE);\n  }\n\n  clearBlankLines() {\n    const codeArr = this.codeString.split(/\\n/g);\n    for (let i = codeArr.length - 1; i >= 0; i--) {\n      const line = codeArr[i].trim();\n      if (!line) codeArr.splice(i, 1);\n    }\n\n    this.codeString = codeArr.join(\"\\n\");\n  }\n\n  /// Convert various elements to CodeString ----------------------------\n  selfToCodeString() {\n    const depth = this.getDepth();\n    //const tabs = child.codelines.getTabs(depth);\n\n    this.codeString = this.codelines.toString(depth);\n  }\n\n  childToCodeString(child) {\n    const childStr = child.toString().trim();\n    this.replaceTag(CHILDREN, `  child: ${childStr}`);\n  }\n\n  propToCodeString() {\n    if (this.prop.isNull()) return;\n    const nspace = this.type === \"text\" ? 0 : 1;\n    this.replaceTag(PROP, this.prop.toString(nspace));\n  }\n\n  prop2ToCodeString() {\n    if (this.prop2.isNull()) return;\n    this.replaceTag(PROP2, this.prop2.toString(0));\n  }\n\n  decorationToCodeString() {\n    if (this.decoration.isNull()) return;\n\n    let decoration = this.decoration.toString(2);\n    decoration = `  decoration: BoxDecoration(\n${decoration}\n  )`;\n\n    this.replaceTag(DECO, decoration);\n  }\n\n  replaceTag(TAG, code) {\n    this.codelines.replaceTag(TAG, code);\n  }\n\n  toString() {\n    if (this.children.length > 0) {\n      if (this.children.length === 1) {\n        const child = this.children[0];\n        this.childToCodeString(child);\n      } else {\n        for (let i = 0; i < this.children; i++) {}\n      }\n    }\n\n    // merge code string\n    this.propToCodeString();\n    this.prop2ToCodeString();\n    this.decorationToCodeString();\n    this.selfToCodeString();\n    this.clearAllPseudoTags();\n    this.clearBlankLines();\n\n    return this.codeString || \"\";\n  }\n}\n\nexport default Widget;\n","import Widget from \"./widget\";\n\nconst parseFlutter = decls => {\n  if (!decls || decls.isNull()) return \"\";\n\n  let cache = {};\n  let widget;\n  widget = new Widget(\"container\");\n  widget.decls = decls;\n\n  decls.forEach((decl, index) => {\n    let key = decl[\"key\"];\n    let val = decl[\"val\"];\n\n    /// parent widget ---------------\n    // Positioned\n    if (isPositioned(key, val, decls)) {\n      if (!cache[\"_parent.position\"]) cache[\"_parent.position\"] = new Widget(\"position\");\n\n      const parent = cache[\"_parent.position\"];\n      parent.setProp(key, val);\n      widget.addChildTo(parent);\n    }\n\n    // Opacity\n    else if (isOpacity(key, val, decls)) {\n      if (!cache[\"_parent.opacity\"]) cache[\"_parent.opacity\"] = new Widget(\"opacity\");\n\n      const parent = cache[\"_parent.opacity\"];\n      parent.setProp(key, val);\n      widget.addChildTo(parent);\n    }\n\n    /// child widget ---------------\n    // text\n    else if (isText(key)) {\n      if (!cache[\"_child.text\"]) cache[\"_child.text\"] = new Widget(\"text\");\n\n      const child = cache[\"_child.text\"];\n      const keys = [\"text-align\"];\n\n      if (keys.indexOf(key) > -1) {\n        child.setProp2(key, val);\n      } else {\n        child.setProp(key, val);\n      }\n      widget.addChild(child);\n    }\n\n    /// self widget ---------------\n    // decoration\n    else if (isDecoration(key)) {\n      widget.setDecoration(key, val);\n    }\n\n    // prop\n    else {\n      widget.setProp(key, val);\n    }\n  });\n\n  return widget.getRoot().toString();\n};\n\n/////////////////////////////////////////////////////////\n//\n//\tFilter Func\n//\n/////////////////////////////////////////////////////////\nconst isText = key => {\n  if (key.indexOf(\"font\") === 0) {\n    return true;\n  } else if (key.indexOf(\"text-\") === 0) {\n    return true;\n  } else if (key === \"color\" || key === \"letter-spacing\") {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst isDecoration = key => {\n  if (key === \"background-image\" || key === \"background-color\" || key === \"border\" || key === \"box-shadow\") {\n    return true;\n  } else if (key.indexOf(\"border\") >= 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst isPositioned = (key, val, decls) => {\n  const position = decls.getVal(\"position\");\n  const hasPosition = position === \"absolute\" || position === \"fixed\";\n\n  const isTLRBAttr = hasPosition && (key === \"top\" || key === \"left\" || key === \"right\" || key === \"bottom\");\n\n  const isPositionAttr = key === \"position\" && (val === \"absolute\" || val === \"fixed\");\n\n  if (isTLRBAttr || isPositionAttr) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isOpacity = (key, val, decls) => {\n  if (key === \"opacity\") {\n    return true;\n  }\n\n  return false;\n};\n\nexport default parseFlutter;\n","import postcss from \"postcss\";\nimport Message from \"../message/message\";\nimport parseCssDecls from \"./css/parse\";\nimport parseFlutter from \"./flutter/parse\";\n\nconst convert2Flutter = async css => {\n  try {\n    const ast = await postcss([\n      require(\"postcss-transform-shortcut\")({})\n      // require(\"postcss-short-border-radius\")()\n    ]).process(css);\n\n    const decls = await parseCssDecls(ast.root);\n    const flutterStyle = parseFlutter(decls);\n\n    if (flutterStyle !== \"\") Message.success(\"Has been converted successfully!\");\n\n    return flutterStyle;\n  } catch (err) {\n    const msg = dumpLogError(err);\n    Message.error(msg);\n\n    return \"\";\n  }\n};\n\nconst dumpLogError = err => {\n  let msg;\n  if (typeof err === \"object\") {\n    if (err.message) {\n      msg = \"C2F - Message: \" + err.message;\n      console.log(`\\n ${msg}`);\n    }\n    if (err.stack) {\n      msg = msg || \"C2F - Convert css 2 flutter error !\";\n      console.log(\"\\nC2F - Stacktrace:\");\n      console.log(\"====================\");\n      console.log(err.stack);\n    }\n  } else {\n    msg = \"C2F - Convert css 2 flutter error !\";\n    console.log(\"C2F - dumpError :: argument is not an object\");\n  }\n\n  return msg;\n};\n\nexport default convert2Flutter;\n","import React from \"react\";\nimport Coder from \"./coder\";\nimport { Row, Col, Button } from \"antd\";\nimport ResultAlert from \"./result-alert\";\nimport Message from \"../service/message/message\";\nimport convert2Flutter from \"../service/convert/converter\";\n\nclass OperatingArea extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.cssOptions = {\n      mode: \"css\"\n      //theme: 'monokai'\n    };\n\n    this.dartOptions = {\n      mode: \"dart\"\n    };\n\n    this.cssVal = \"\";\n    this.dartVal = \"\";\n  }\n\n  async componentDidMount() {\n    this.cssVal = `\nbackground-color: #e0e0e0;\nwidth: 320px;\nheight: 240px;\nborder:5px solid red;\nfont: 900 24px Georgia;\npadding: 2px 10px;\nmargin: 3px;\nborder-radius: 10px;\ntext-decoration: underline wavy red;\n    `.trim();\n\n    await this.convertAndUpdateDartCoder();\n  }\n\n  clearBtnClickHandler(e) {\n    this.updateCoder({ cssVal: \"\", dartVal: \"\" });\n    Message.success(\"Cleared successfully\");\n  }\n\n  async convertBtnClickHandler(e) {\n    await this.convertAndUpdateDartCoder();\n  }\n\n  codeChangeHadler(value) {\n    this.cssVal = value;\n  }\n\n  async convertAndUpdateDartCoder() {\n    const dartVal = await convert2Flutter(this.cssVal);\n    this.updateCoder({ dartVal });\n  }\n\n  updateCoder({ cssVal, dartVal }) {\n    if (dartVal !== undefined && dartVal !== null) this.dartVal = dartVal;\n    if (cssVal !== undefined && cssVal !== null) this.cssVal = cssVal;\n\n    this.setState({});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <ResultAlert />\n        <Row>\n          <Col span={12} className=\"coder-con\">\n            <div className=\"coder-title\">Css</div>\n            <Coder\n              options={this.cssOptions}\n              value={this.cssVal}\n              onChange={this.codeChangeHadler.bind(this)}\n            />\n          </Col>\n\n          <Col span={12} className=\"coder-con\">\n            <div className=\"coder-title\">Flutter</div>\n            <Coder options={this.dartOptions} value={this.dartVal} />\n          </Col>\n        </Row>\n\n        <Row className=\"btns\">\n          <Button type=\"danger\" onClick={this.clearBtnClickHandler.bind(this)}>\n            Clear\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={this.convertBtnClickHandler.bind(this)}\n          >\n            Convert\n          </Button>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default OperatingArea;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Logo from \"./components/logo\";\nimport OperatingArea from \"./components/operating-area\";\n\nimport \"./App.css\";\n\nconst { Content } = Layout;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Content>\n          <Logo />\n          <OperatingArea />\n          <div id=\"avator\"></div>\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}