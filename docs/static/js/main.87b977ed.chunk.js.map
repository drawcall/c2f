{"version":3,"sources":["assets/image/logo.png","components/logo.jsx","components/coder.jsx","components/result-alert.jsx","service/message/message.js","service/convert/css/decls.js","service/utils/num.js","service/convert/css/split-mapping.js","service/convert/css/split-cssattr.js","service/convert/css/avatar.js","service/convert/css/parse.js","service/convert/flutter/template.js","service/convert/flutter/code-arr.js","service/convert/flutter/transform/unit.js","service/utils/unit.js","service/convert/flutter/transform/color.js","service/convert/flutter/transform/border.js","service/convert/flutter/transform/boxshadow.js","service/convert/flutter/transform/transform.js","service/utils/arr.js","service/convert/flutter/transform/font-weight.js","service/convert/flutter/transform/font-family.js","service/utils/str.js","service/convert/flutter/transform/constraints.js","service/convert/flutter/transform/border-radius.js","service/utils/camel.js","service/convert/flutter/transform/axis-alignment.js","service/convert/flutter/transform/marginpadding.js","service/convert/flutter/transform/background-image.js","service/utils/pos.js","service/convert/flutter/transform.js","service/convert/flutter/widget.js","service/convert/flutter/filter.js","service/convert/flutter/parse.js","service/convert/converter.js","components/operating-area.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","_react_16_14_0_react_default","a","createElement","className","alt","src","logo","width","style","padding","href","rel","target","require","Coder","editor","data","value","this","props","onChange","_react_codemirror2_6_0_1_react_codemirror2","options","Object","assign","theme","tabSize","lineNumbers","bind","React","Component","ResultAlert","message","config","duration","maxCount","first","showMessage","type","msg","success","error","Message","Decls","classCallCheck","decls","_ref","key","val","_ref$valueList","valueList","_ref$data","push","length","func","forEach","decl","index","add","i","splice","defaultVal","cloneDecls","clone","isNone","trim","toNum","isNumber","r","exec","concat","parseFloat","toNumber","toRadian","fl","arguments","undefined","radian","toString","replace","Math","PI","ppo","floor","toRound","n","d","pow","round","SPLIT_MAPPING","background","border-radius","text-decoration","border","margin","font","splitByMainStyle","mainStyle","css","subStyles","getVal","allStyle","getAllStyle","$","removeClass","removeAttr","addValToDecls","remove","getStyleVal","getAvatarStyle","splitCssAttr","parseCssDecls","root","Promise","resolve","reject","walkDecls","list","postcss","space","prop","setTimeout","PROP","CHILDREN","DECO","CONTAINER","TEXT","CENTER","ROW","COLUMN","POSITIONED","TRANSFORM","OPACITY","CodeArr","arr","lines","code","getIndexOf","enabled","indexOf","tabs","tag","newCode","cloneLines","nspace","join","getTabs","split","line","toFunit","test","isNumerical","isPercentage","isPixel","isInteger","isEm","isRem","isPt","toFColor","c16","color","hex","e","toFBorder","toColor","createBoxShadow","toArray","x","y","offset","blurRadius","rgbas","replaceRbga2Sign","str","replaceSign2Rgba","slice","toBoxShadow","shadows","shadowStr","findFromProp","name","formatVal","strArr","newVal","toFTransform","sign","RegExp","split2Arr","skew","scale","rotate","translate","matrixval","toFFontWeight","toFFontFamily","toConstraints","bcVal","maxWidth","minWidth","maxHeight","minHeight","toFBorderRadius","tl","tr","br","bl","toCamel","$0","$1","toUpperCase","toAxisAlignment","toFMarginPadding","top","right","bottom","left","createLineGradient","end","colors","steps","stepsVal","colorsVal","String","c1","c2","result","getEnd","createRadialGradient","angle","cos","sin","createBgImage","size","repeat","position","toNameVal","toDecorationImage","match","inSplitStyles","transfromToCamelKey","transform","mainStyleKey","camelKey","Widget","children","parent","id","uuid","template","codeString","prop2","decoration","codelines","child","loop","addChild","depth","okey","oval","_transform","_transform2","_transform3","codeArr","getDepth","childStr","replaceTag","isNull","TAG","childToCodeString","propToCodeString","prop2ToCodeString","decorationToCodeString","selfToCodeString","clearAllPseudoTags","clearBlankLines","WidgetManager","cache","isFlex","_ref3","parseFlutter","widget","widgetManager","isPositioned","get","setProp","addChildTo","_ref2","isOpacity","_ref4","alignItems","justifyContent","isCenter","_ref5","isRow","_ref6","isColumn","_ref7","isTransform","isText","setProp2","isDecoration","setDecoration","getRoot","convert2Flutter","asyncToGenerator","regenerator_default","mark","_callee","ast","flutterStyle","wrap","_context","prev","next","process","sent","abrupt","t0","dumpLogError","stop","_x","apply","err","console","log","stack","OperatingArea","_this","_super","call","cssOptions","mode","dartOptions","cssVal","dartVal","convertAndUpdateDartCoder","updateCoder","_callee2","_context2","_callee3","_context3","setState","result_alert","row","col","span","coder","codeChangeHadler","es_button","onClick","clearBtnClickHandler","convertBtnClickHandler","Content","Layout","App","layout","components_logo","operating_area","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.87b977ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5857ad01.png\";","import React from \"react\";\nimport logo from \"../assets/image/logo.png\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo\">\n      <div className=\"title\">\n        <img alt=\"\" src={logo} width={100} /> Convert css style to flutter style\n      </div>\n      <div>\n        Source code is here\n        <a\n          style={{ padding: 6 }}\n          href=\"https://github.com/drawcall/c2f\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          https://github.com/drawcall/c2f\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\n\nrequire(\"codemirror/lib/codemirror.css\");\nrequire(\"codemirror/theme/material.css\");\nrequire(\"codemirror/theme/monokai.css\");\nrequire(\"codemirror/mode/css/css.js\");\nrequire(\"codemirror/mode/dart/dart.js\");\n\nclass Coder extends React.Component {\n  onChange(editor, data, value) {\n    this.props.onChange && this.props.onChange(value);\n  }\n\n  render() {\n    return (\n      <CodeMirror\n        className=\"code-mirror\"\n        value={this.props.value || \"\"}\n        options={Object.assign(\n          {\n            theme: \"monokai\",\n            tabSize: 2,\n            lineNumbers: true\n          },\n          this.props.options\n        )}\n        onChange={this.onChange.bind(this)}\n      />\n    );\n  }\n}\n\nexport default Coder;\n","import React from \"react\";\nimport { Alert } from \"antd\";\n\nclass ResultAlert extends React.Component {\n  render() {\n    return (\n      <div>\n        {false ? (\n          <Alert message=\"Alert Message Text\" type=\"success\" banner />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ResultAlert;\n","import { message } from \"antd\";\n\nmessage.config({\n  duration: 1,\n  maxCount: 3\n});\n\nlet first = true;\nconst showMessage = (type, msg) => {\n  if (first) {\n    first = false;\n    return;\n  }\n\n  if (type === \"success\") message.success(msg);\n  else message.error(msg);\n};\n\nconst Message = {\n  success(msg) {\n    showMessage(\"success\", msg);\n  },\n  error(msg) {\n    showMessage(\"error\", msg);\n  }\n};\n\nexport default Message;\n","import clone from \"lodash/clone\";\n\nclass Decls {\n  constructor() {\n    this.decls = [];\n  }\n\n  add({ key, val, valueList = null, data = null }) {\n    this.decls.push({ data, valueList, key, val });\n  }\n\n  isNull() {\n    return this.decls.length === 0;\n  }\n\n  forEach(func) {\n    this.decls.forEach((decl, index) => func(decl, index));\n  }\n\n  merge(decls) {\n    for (let key in decls) {\n      this.add({\n        key,\n        val: decls[key]\n      });\n    }\n  }\n\n  remove(key) {\n    for (let i = this.decls.length - 1; i >= 0; i--) {\n      if (this.decls[i][\"key\"] === key) {\n        this.decls.splice(i, 1);\n      }\n    }\n  }\n\n  getVal(key, defaultVal) {\n    let val = null;\n    this.decls.forEach(decl => {\n      if (decl.key === key) val = decl.val;\n    });\n\n    return val || defaultVal;\n  }\n\n  clone() {\n    const cloneDecls = new Decls();\n    cloneDecls.decls = clone(this.decls);\n\n    return cloneDecls;\n  }\n}\n\nexport default Decls;\n","import ppo from \"ppo\";\nimport toNumber from \"lodash/toNumber\";\nimport isNumber from \"lodash/isNumber\";\n\nconst isMulti = key => {\n  if (key.indexOf(\"|\") > 0) return true;\n  else return false;\n};\n\nconst findSimilarNumber = (n, rule) => {\n  if (rule[n + \"\"]) return n;\n\n  const nums = [];\n  for (let key in rule) {\n    nums.push(parseInt(key));\n  }\n  nums.sort((n1, n2) => n2 - n1);\n\n  for (let i = 0; i < nums.length; i++) {\n    const num = nums[i];\n    if (n > num) return num;\n  }\n\n  return 0;\n};\n\nconst isNone = val => {\n  if (!val) return true;\n\n  if (typeof val === \"string\") {\n    if (val.trim() === \"\") return true;\n    if (val === \"null\") return true;\n    if (val === \"none\") return true;\n    if (val === \"inhert\") return true;\n  }\n\n  return false;\n};\n\nconst toNum = val => {\n  if (isNumber(val)) return val;\n\n  const r = /([-0-9.]+)[a-zA-Z%]/gi.exec(`${val}c`);\n  if (r && r.length >= 2) {\n    val = r[1];\n    val = isNumber(val) ? val : parseFloat(val);\n    return val;\n  } else {\n    return toNumber(val);\n  }\n};\n\nconst toRadian = (val, fl = 3) => {\n  let radian = val.toString().replace(/deg$/g, \"\");\n  radian = (radian * Math.PI) / 180;\n  return ppo.floor(radian, fl);\n};\n\nconst toRound = (val, n = 3) => {\n  const d = Math.pow(10, n);\n  const num = Math.round(val * d);\n  return num / d;\n};\n\nexport { isMulti, isNone, toNum, findSimilarNumber, toRadian, toRound };\n","const SPLIT_MAPPING = {\n  background: [\n    \"background-color\",\n    \"background-image\",\n    \"background-position\",\n    \"background-size\",\n    \"background-repeat\"\n  ],\n\n  \"border-radius\": [\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-left-radius\"\n  ],\n\n  \"text-decoration\": [\n    \"text-decoration-line\",\n    \"text-decoration-style\",\n    \"text-decoration-color\"\n  ],\n\n  border: [\"border-width\", \"border-style\", \"border-color\"],\n\n  padding: [\"padding-top\", \"padding-right\", \"padding-bottom\", \"padding-left\"],\n\n  margin: [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"],\n\n  font: [\n    \"font-style\",\n    \"font-weight\",\n    \"font-size\",\n    \"font-family\"\n  ]\n};\n\nexport default SPLIT_MAPPING;\n","////////////////////////////////////////////////////////////////\n//\n//  Jquery is used here because it is a nice style parser.\n//\n////////////////////////////////////////////////////////////////\n\nimport { isNone } from \"../../utils/num\";\nimport SPLIT_MAPPING from \"./split-mapping\";\nimport { getAvatarStyle, setAvatarStyle } from \"./avatar\";\n\nconst splitCssAttr = decls => {\n  if (!decls) return null;\n\n  let cloneDecls = decls.clone();\n  for (let mainStyle in SPLIT_MAPPING) {\n    cloneDecls = splitByMainStyle(cloneDecls, mainStyle, SPLIT_MAPPING[mainStyle]);\n  }\n\n  return cloneDecls;\n};\n\nconst splitByMainStyle = (decls, mainStyle, subStyles = []) => {\n  const val = decls.getVal(mainStyle);\n  if (val) {\n    const allStyle = getAllStyle(decls);\n    setAvatarStyle(allStyle);\n    subStyles.forEach(style => addValToDecls(decls, style));\n    decls.remove(mainStyle);\n  }\n\n  return decls;\n};\n\nconst addValToDecls = (decls, key) => {\n  const val = getStyleVal(decls, key);\n  if (!isNone(val)) decls.add({ key, val });\n};\n\nconst getStyleVal = (decls, key) => {\n  let val = getAvatarStyle(key);\n  if (isNone(val)) val = decls.getVal(key);\n  return val;\n};\n\nconst getAllStyle = decls => {\n  const style = {};\n  decls.forEach(decl => {\n    const key = decl[\"key\"];\n    const val = decl[\"val\"];\n    style[key] = val;\n  });\n  return style;\n};\n\nexport default splitCssAttr;\n","import $ from \"jquery\";\n\nconst setAvatarStyle = css => {\n  $(\"#avator\")\n    .removeClass()\n    .removeAttr(\"style\")\n    .css(css);\n};\n\nconst getAvatarStyle = key => {\n  return $(\"#avator\").css(key);\n};\n\nexport { getAvatarStyle, setAvatarStyle };\n","import postcss from \"postcss\";\nimport Decls from \"./decls\";\nimport splitCssAttr from \"./split-cssattr\";\n\nconst parseCssDecls = root => {\n  if (!root) return null;\n\n  return new Promise(function (resolve, reject) {\n    const decls = new Decls();\n\n    root.walkDecls(decl => {\n      const list = postcss.list.space(decl.value);\n\n      decls.add({\n        key: decl.prop,\n        val: decl.value,\n        data: decl,\n        valueList: list\n      });\n    });\n\n\n    setTimeout((decls) => {\n      decls = splitCssAttr(decls);\n      resolve(decls)\n    }, 80, decls);\n  });\n};\n\nexport default parseCssDecls;\n","const PROP = \"<-prop->\";\nconst PROP2 = \"<-prop2->\";\nconst CLASS = \"<-class->\";\nconst CHILDREN = \"<-children->\";\nconst DECO = \"<-decoration->\";\nconst TAB = \"<-tab->\";\nconst REAL_SPACE = \"  \";\n\nconst CONTAINER = `\n Container(\n  ${CHILDREN}\n  ${PROP}\n  ${DECO}\n),\n`.trim();\n\nconst TEXT = `\n Text(\n  \"Hello World\",\n  style: TextStyle(\n    ${PROP}\n  ),\n  ${PROP2}\n),\n`.trim();\n\nconst CENTER = `\n Center(\n  ${CHILDREN}\n),\n`.trim();\n\nconst ROW = `\n ROW(\n  ${CHILDREN}\n  ${PROP}\n),\n`.trim();\n\nconst COLUMN = `\n COLUMN(\n  ${CHILDREN}\n  ${PROP}\n),\n`.trim();\n\nconst POSITIONED = `\n Positioned(\n  ${CHILDREN}\n  ${PROP}\n),`;\n\nconst TRANSFORM = `\n Transform(\n  ${CHILDREN}\n  ${PROP}\n),`;\n\nconst OPACITY = `\n Opacity(\n  ${CHILDREN}\n  ${PROP}\n),`;\n\nexport {\n  CONTAINER,\n  TEXT,\n  CHILDREN,\n  DECO,\n  CLASS,\n  PROP,\n  PROP2,\n  CENTER,\n  TAB,\n  ROW,\n  COLUMN,\n  POSITIONED,\n  TRANSFORM,\n  OPACITY,\n  REAL_SPACE\n};\n","/////////////////////////////////////////////////////////\n//\n//\tCodeArr\n//\t[\n//   \"new Container(\" ,\n//\t \"  child: new Text(\" ,\n//\t \"    \"Hello World\",\"\n//  ]\n//\n/////////////////////////////////////////////////////////\nimport { TAB } from \"./template\";\nimport clone from \"lodash/clone\";\n\nclass CodeArr {\n  constructor(arr) {\n    this.lines = arr || [];\n  }\n\n  add(key, code) {\n    const index = this.getIndexOf(key);\n    if (index > -1) {\n      this.lines[index] = code;\n    } else {\n      this.lines.push(code);\n    }\n    this.enabled = true;\n  }\n\n  isNull() {\n    return this.lines.length === 0;\n  }\n\n  getIndexOf(key) {\n    for (let i = 0; i < this.lines.length; i++) {\n      if (this.lines[i].indexOf(`${key}:`) > -1) return i;\n    }\n    return -1;\n  }\n\n  getTabs(n) {\n    let tabs = \"\";\n    for (let i = 0; i < n; i++) tabs += TAB;\n    return tabs;\n  }\n\n  replaceTag(tag, newCode) {\n    const cloneLines = clone(this.lines);\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const code = this.lines[i];\n      if (code.indexOf(tag) > -1) {\n        cloneLines.splice(i, 0, newCode);\n      }\n    }\n    this.lines = cloneLines;\n  }\n\n  toString(nspace = 0) {\n    if (nspace === 0) {\n      return this.lines.join(\"\\n\");\n    } else {\n      const tabs = this.getTabs(nspace);\n      const str = this.lines.join(\"\\n\");\n      const arr = str.split(/\\n/g);\n      arr.forEach((line, index) => (arr[index] = tabs + line));\n\n      return arr.join(\"\\n\");\n    }\n  }\n}\n\nexport default CodeArr;\n","import isNumber from \"lodash/isNumber\";\nimport isInteger from \"lodash/isInteger\";\nimport { toNum } from \"../../../utils/num\";\nimport { isNumerical, isPercentage, isPixel, isEm, isRem, isPt } from \"../../../utils/unit\";\n\nconst toFunit = val => {\n  if (isNumber(val)) return val;\n\n  val += \"\";\n\n  // like \"250\"\n  if (isNumerical(val)) {\n    return toNum(val);\n  }\n\n  // like 50%\n  else if (isPercentage(val)) {\n    val = toNum(val) / 100;\n    return `_parent_ * ${val} // percentage of parent width. like 'MediaQuery.of(context).size.width * 0.2'`;\n  }\n\n  // like 120px\n  else if (isPixel(val)) {\n    val = toNum(val);\n    val = isInteger(val) ? `${val}.0` : `${val}`;\n    return val;\n  }\n\n  // like 3.2em\n  else if (isEm(val)) {\n    val = toNum(val);\n    return `_parent_font_width_ * ${val} // https://www.w3.org/Style/Examples/007/units`;\n  }\n\n  // like 10rem\n  else if (isRem(val)) {\n    val = toNum(val);\n    return `_root_font_width_ * ${val} // https://www.w3.org/Style/Examples/007/units`;\n  }\n\n  // like 12pt\n  else if (isPt(val)) {\n    val = toNum(val);\n    return `${val} * 72 / _dpi_ // pt = px * dpi / 72`;\n  } else {\n    return 0;\n  }\n};\n\nexport default toFunit;\n","const isNumerical = val => /^([0-9]+)$/gi.test(val.toString());\n\nconst isPercentage = val => /([0-9]+)%$/gi.test(val);\n\nconst isPixel = val => /([0-9]+)(px|dpx)$/gi.test(val);\n\nconst isEm = val => /([0-9]+)em$/gi.test(val);\n\nconst isRem = val => /([0-9]+)rem$/gi.test(val);\n\nconst isPt = val => /([0-9]+)pt$/gi.test(val);\n\nexport { isNumerical, isPercentage, isPixel, isPt, isEm, isRem };\n","import color from \"color\";\n\nconst toFColor = val => {\n  try {\n    val = typeof val === \"string\" ? val.trim() : val;\n    const c16 = color(val)\n      .hex()\n      .replace(/^#/, \"0x\");\n\n    return `Color(${c16}00)`;\n  } catch (e) {\n    const c16 = (val + \"\").replace(/^#/, \"0x\");\n    return `Color(${c16}00)`;\n  }\n};\n\nexport default toFColor;\n","import toFunit from \"./unit\";\nimport toColor from \"./color\";\n\nconst toFBorder = (val, decls) => {\n  let width = decls.getVal(\"border-width\", \"1px\");\n  let color = decls.getVal(\"border-color\", \"blue\");\n  let style = decls.getVal(\"border-style\", \"solid\");\n\n  width = toFunit(width);\n  color = toColor(color);\n\n  return `\nBorder.all(\n  color: ${color},\n  width: ${width},\n  style: BorderStyle.${style}\n)`.trim();\n};\n\nexport default toFBorder;\n","import trim from \"lodash/trim\";\nimport toFunit from \"./unit\";\nimport toColor from \"./color\";\n\n// 0 2px 4px rgba(0, 0, 0, 0.8);\nconst toBoxShadow = val => {\n  let shadows = \"\";\n  val = replaceRbga2Sign(val);\n  const arr = val.split(\",\");\n  for (let i = 0; i < arr.length; i++) {\n    const shadowStr = replaceSign2Rgba(trim(arr[i]));\n    const shadow = createBoxShadow(shadowStr);\n    shadows += \"\\n\" + shadow;\n  }\n\n  return `\n<BoxShadow>[\n${shadows}\n]`.trim();\n};\n\nconst createBoxShadow = val => {\n  val = toArray(val);\n  const x = toFunit(val[0]);\n  const y = toFunit(val[1]);\n  const offset = `Offset(${x}, ${y})`;\n  const color = toColor(val[3] || \"#000000\");\n  const blurRadius = toFunit(val[2] || 10);\n\n  return `\n  BoxShadow (\n    color: ${color},\n    offset: ${offset},\n    blurRadius: ${blurRadius},\n  ),`;\n};\n\n/// replaceRbga2Sign and replaceSign2Rgba\nlet i = 0;\nconst rgbas = {};\nconst replaceRbga2Sign = str => {\n  return str.replace(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)/gi, val => {\n    const key = `__${i++}__`;\n    rgbas[key] = val;\n    return key;\n  });\n};\n\nconst replaceSign2Rgba = str => {\n  for (let key in rgbas) {\n    str = str.replace(key, rgbas[key]);\n  }\n  return str;\n};\n\nconst toArray = val => {\n  let arr = val.trim().split(\" \");\n  if (arr.length > 4) {\n    let str = \"\";\n    for (let i = 3; i < arr.length; i++) {\n      str += arr[i];\n    }\n\n    arr = arr.slice(0, 4);\n    arr[3] = str;\n  }\n\n  return arr;\n};\n\nexport default toBoxShadow;\n","import trim from \"lodash/trim\";\nimport { split2Arr } from \"../../../utils/arr\";\nimport { toNum, toRadian } from \"../../../utils/num\";\n\n// skewX(25deg) rotate3d(180deg,0,1) scale3d(2,2,1) translate3d(10px,10px,0px);\nconst toFTransform = val => {\n  val = trim(val);\n  if (/^matrix/gi.test(val)) {\n    return val.replace(\"matrix\", \"Matrix4\");\n  } else {\n    const arr = split2Arr(val);\n\n    let skew = findFromProp(\"skew\", arr);\n    let scale = findFromProp(\"scale\", arr);\n    let rotate = findFromProp(\"rotate\", arr);\n    let translate = findFromProp(\"translate\", arr);\n\n    let matrixval = \"\";\n    skew = formatVal(\"skew\", skew);\n    scale = formatVal(\"scale\", scale);\n    rotate = formatVal(\"rotate\", rotate);\n    translate = formatVal(\"translate\", translate);\n\n    if (skew) matrixval += `${skew}..`;\n    if (scale) matrixval += `${scale}..`;\n    if (rotate) matrixval += `${rotate}..`;\n    if (translate) matrixval += `${translate}..`;\n    matrixval = matrixval.replace(/\\.\\.$/g, \"\");\n\n    return `Matrix4.${matrixval}`;\n  }\n};\n\nconst findFromProp = (name, arr) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].indexOf(name) > -1) {\n      return arr[i];\n    }\n  }\n  return null;\n};\n\nconst formatVal = (key, val) => {\n  if (!val) return null;\n\n  const r = /[a-zA-Z]+\\((.*)\\)/.exec(val);\n  if (r && r.length >= 2) {\n    let str = r[1];\n    let strArr = str.split(\",\");\n    let arr = [];\n\n    if (key === \"rotate\") {\n      const radian = toRadian(str);\n      val = val.replace(str, radian);\n    } else {\n      strArr.forEach(n => {\n        n = toNum(n);\n        arr.push(n);\n      });\n      const newVal = arr.join(\",\");\n      val = val.replace(\"3d\", \"\").replace(str, newVal);\n    }\n  }\n\n  return val;\n};\n\nexport default toFTransform;\n","const split2Arr = (val, sign = \")\") => {\n  const arr = val.split(`${sign} `);\n  for (let i = 0; i < arr.length; i++) {\n    const str = arr[i];\n    const reg = new RegExp(`\\\\${sign}$`, \"gi\");\n    if (!reg.test(str)) arr[i] = str + sign;\n  }\n  return arr;\n};\n\nexport { split2Arr };\n","//import toNumber from \"lodash/toNumber\";\n\nconst toFFontWeight = val => {\n  if (val === \"bold\" || val === \"normal\") {\n    return `FontWeight.${val}`;\n  } else if (/^[1-9]00/.test(val + \"\")) {\n    return `FontWeight.w${val}`;\n  } else {\n    return `FontWeight.normal`;\n  }\n};\n\nexport default toFFontWeight;\n","import { addQuotes } from \"../../../utils/str\";\n\nconst toFFontFamily = val => {\n  if (/^(\"|')/gi.test(val) && !/(\"|')$/gi.test(val)) {\n    val = val.replace(/'/g, '\"');\n    val = val.split('\"')[1];\n  }\n\n  return addQuotes(val);\n};\n\nexport default toFFontFamily;\n","const addQuotes = str => {\n  if (!/^(\"|')/gi.test(str)) {\n    str = `\"${str}\"`;\n  }\n  return str;\n};\n\nconst getLast = str => {\n  return str.charAt(str.length - 1);\n};\n\nexport { addQuotes, getLast };\n","import toFunit from \"./unit\";\n\nconst toConstraints = (val, decls) => {\n  let bcVal = \"\";\n  let maxWidth = decls.getVal(\"max-width\");\n  let minWidth = decls.getVal(\"min-width\");\n  let maxHeight = decls.getVal(\"max-height\");\n  let minHeight = decls.getVal(\"min-height\");\n\n  if (maxWidth) {\n    bcVal += `maxWidth: ${toFunit(maxWidth)}`;\n  }\n\n  if (minWidth) {\n    bcVal += `, minWidth: ${toFunit(minWidth)}`;\n  }\n\n  if (maxHeight) {\n    bcVal += `, maxHeight: ${toFunit(maxHeight)}`;\n  }\n\n  if (minHeight) {\n    bcVal += `, minHeight: ${toFunit(minHeight)}`;\n  }\n\n  bcVal = bcVal.replace(/^,/g, \"\");\n  return `BoxConstraints(${bcVal})`;\n};\n\nexport default toConstraints;\n","import toFunit from \"./unit\";\n\nconst toFBorderRadius = (val, decls) => {\n  let tl = decls.getVal(\"border-top-left-radius\", 0);\n  let tr = decls.getVal(\"border-top-right-radius\", 0);\n  let br = decls.getVal(\"border-bottom-right-radius\", 0);\n  let bl = decls.getVal(\"border-bottom-left-radius\", 0);\n\n  if (tl === tr && tr === br && br === bl) {\n    if (tl === \"50%\") {\n      return `BoxShape.circle`;\n    } else {\n      return `BorderRadius.all(const Radius.circular(${toFunit(tl)}))`;\n    }\n  } else {\n    let tl = toFunit(val[0]);\n    let tr = toFunit(val[1]);\n    let br = toFunit(val[2]);\n    let bl = toFunit(val[3]);\n\n    tl = `topLeft: Radius.circular(${tl})`;\n    tr = `topRight: Radius.circular(${tr})`;\n    br = `bottomRight: Radius.circular(${br})`;\n    bl = `bottomLeft: Radius.circular(${bl})`;\n\n    return `BorderRadius.only(${tl}, ${tr}, ${br}, ${bl})`;\n  }\n};\n\nexport default toFBorderRadius;\n","const toCamel = val => {\n  let re = /-(\\w)/g;\n  return val.replace(re, function ($0, $1) {\n    return $1.toUpperCase();\n  });\n};\n\nexport default toCamel;\n","import toCamel from \"../../../utils/camel\";\n\nconst toAxisAlignment = val => {\n  val = val.replace(/flex-/, \"\");\n  return `${toCamel(val)}`;\n};\n\nexport default toAxisAlignment;\n","import toFunit from \"./unit\";\n\nconst toFMarginPadding = (key, val, decls) => {\n  let top = decls.getVal(`${key}-top`, 0);\n  let right = decls.getVal(`${key}-right`, 0);\n  let bottom = decls.getVal(`${key}-bottom`, 0);\n  let left = decls.getVal(`${key}-left`, 0);\n\n  if (top === right && right === bottom && bottom === left) {\n    top = toFunit(top);\n\n    return `const EdgeInsets.all(${top})`;\n  } else {\n    top = toFunit(top);\n    right = toFunit(right);\n    bottom = toFunit(bottom);\n    left = toFunit(left);\n\n    return `const EdgeInsets.only(top: ${top}, right: ${right}, bottom: ${bottom}, left: ${left})`;\n  }\n};\n\nexport default toFMarginPadding;\n","import toColor from \"./color\";\nimport toCamel from \"../../../utils/camel\";\nimport { toNameVal } from \"../../../utils/pos\";\nimport { toRound, toRadian, toNum } from \"../../../utils/num\";\n\nconst toDecorationImage = (val, decls) => {\n  val = String(val);\n\n  /// background-image = linear-gradient\n  if (/^linear-gradient/gi.test(val)) {\n    return createLineGradient(val, decls);\n  }\n\n  if (/^radial-gradient/gi.test(val)) {\n    return createRadialGradient(val, decls);\n  }\n\n  /// background-image - a.jpg\n  else {\n    return createBgImage(val, decls);\n  }\n};\n\nconst createLineGradient = (val, decls) => {\n  const colors = [];\n  const steps = [];\n  let end;\n  const arr = val\n    .replace(/^[a-zA-Z]+-gradient/gi, \"\")\n    .replace(\"(\", \"\")\n    .replace(\")\", \"\")\n    .split(\",\");\n\n  if (arr.length > 2) {\n    const d = arr[0];\n    end = d.replace(\"to\", \"\").trim();\n    let stepsVal, colorsVal;\n\n    for (let i = 1; i < arr.length; i++) {\n      const color = String(arr[i]).trim();\n      if (/\\d{0,2}%$/gi.test(color)) {\n        colorsVal = color.split(\" \")[0];\n        stepsVal = toNum(color.split(\" \")[1]) / 100;\n        steps.push(stepsVal);\n      } else {\n        colorsVal = color;\n      }\n\n      colors.push(toColor(colorsVal));\n    }\n  } else {\n    end = \"bottom\";\n    const c1 = arr[0];\n    const c2 = arr[1] || arr[0];\n    colors.push(toColor(c1));\n    colors.push(toColor(c2));\n  }\n\n  let result = `\nLinearGradient(\n  begin: Alignment(0.0, 0.0),\n  end: ${getEnd(end)},\n  colors: [${colors}],\n)`.trim();\n\n  if (steps.length) {\n    result = result.replace(\n      /\\)$/gi,\n      `\n  steps: [${steps}]\n)`\n    );\n  }\n\n  return result;\n};\n\nconst createRadialGradient = (val, decls) => {\n  const colors = [];\n  const arr = val\n    .replace(/^[a-zA-Z]+-gradient/gi, \"\")\n    .replace(\"(\", \"\")\n    .replace(\")\", \"\")\n    .split(\",\");\n\n  for (let i = 0; i < arr.length; i++) {\n    if (/^(circle|farthest|closest|ellipse)/.test(arr[i])) continue;\n    colors.push(toColor(arr[i]));\n  }\n\n  return `\nRadialGradient(\n  colors: [${colors}]\n)`.trim();\n};\n\nconst getEnd = (end) => {\n  let angle;\n  let n = 20;\n  if (end === \"right\") {\n    angle = toRadian(90, n);\n  } else if (end === \"top\") {\n    angle = toRadian(0, n);\n  } else if (end === \"left\") {\n    angle = toRadian(-90, n);\n  } else if (end === \"bottom\") {\n    angle = toRadian(180, n);\n  } else {\n    angle = toRadian(end, n);\n  }\n\n  angle -= Math.PI / 2;\n  const x = toRound(Math.cos(angle));\n  const y = toRound(Math.sin(angle));\n  return `Alignment(${x}, ${y})`;\n};\n\nconst createBgImage = (val, decls) => {\n  val = val.replace(/^url\\(/g, \"\").replace(/\\)$/g, \"\");\n  if (!/^('|\")/.test(val)) val = `\"${val}\"`;\n\n  const size = decls.getVal(\"background-size\", \"cover\");\n  let repeat = decls.getVal(\"background-repeat\", \"no-repeat\");\n  repeat = toCamel(repeat);\n  let position = decls.getVal(\"background-position\", \"center\");\n  position = toNameVal(position);\n\n  return `\nDecorationImage(\n  image: ExactAssetImage(${val}),\n  fit: BoxFit.${size},\n  repeat: ImageRepeat.${repeat},\n)`.trim();\n};\n\nexport default toDecorationImage;\n","import toCamel from \"./camel\";\n\nconst isPercentage = val => {\n  if (val.indexOf(\"%\") > 0) {\n    return true;\n  }\n  return false;\n};\n\nconst isName = val => {\n  const keynames = \"left|center|bottom|top|right\".split(\"|\");\n  for (let i = 0; i < keynames.length; i++) {\n    if (val.indexOf(keynames[i]) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// 0% 50% -> leftCenter\n// center left -> centerLeft\nconst toNameVal = val => {\n  let result = \"\";\n  if (isPercentage(val)) {\n    const arr = val.split(\" \");\n    for (let i = 0; i < arr.length; i++) {\n      if (i === 0) {\n        if (arr[i] === \"0%\") {\n          result += \"top\";\n        } else if (arr[i] === \"50%\") {\n          result += \"center\";\n        } else {\n          result += \"bottom\";\n        }\n      } else {\n        if (arr[i] === \"0%\") {\n          result += \"-left\";\n        } else if (arr[i] === \"50%\") {\n          result += \"-center\";\n        } else {\n          result += \"-right\";\n        }\n      }\n    }\n  } else {\n    result.replace(/\\s/gi, \"-\");\n  }\n\n  result = toCamel(result);\n  result = result === \"centerCenter\" ? \"center\" : result;\n  return result;\n};\n\nexport { isPercentage, isName, toNameVal };\n","import toFunit from \"./transform/unit\";\nimport toFColor from \"./transform/color\";\nimport toFBorder from \"./transform/border\";\nimport toBoxShadow from \"./transform/boxshadow\";\nimport toFTransform from \"./transform/transform\";\nimport toFFontWeight from \"./transform/font-weight\";\nimport toFFontFamily from \"./transform/font-family\";\nimport toConstraints from \"./transform/constraints\";\nimport toFBorderRadius from \"./transform/border-radius\";\nimport toAxisAlignment from \"./transform/axis-alignment\";\nimport toFMarginPadding from \"./transform/marginpadding\";\nimport toDecorationImage from \"./transform/background-image\";\nimport SPLIT_MAPPING from \"../css/split-mapping\";\nimport toCamel from \"../../utils/camel\";\n\nconst transform = (key, val, decls) => {\n  const result = { key: null, val };\n\n  switch (true) {\n    // background-image color ------------------------\n    case match(key, \"background-image\"):\n      result[\"key\"] = /^[a-zA-Z]+-gradient/gi.test(val) ? \"gradient\" : \"image\";\n      result[\"val\"] = toDecorationImage(val, decls);\n      break;\n\n    case match(key, \"background-color\", \"color\"):\n      result[\"val\"] = toFColor(val);\n      if (val === \"rgba(0, 0, 0, 0)\") {\n        result[\"key\"] = null;\n      } else {\n        result[\"key\"] = \"color\";\n      }\n\n      break;\n\n    // width & height ------------------------\n    case match(key, \"width\", \"height\"):\n      result[\"key\"] = key;\n      result[\"val\"] = toFunit(val);\n      break;\n\n    // left & right ------------------------\n    case match(key, \"top\", \"right\", \"left\", \"bottom\"):\n      result[\"key\"] = key;\n      result[\"val\"] = toFunit(val);\n      break;\n\n    // max-width & min-width ------------------------\n    case match(key, \"max-width\", \"min-width\"):\n    case match(key, \"max-height\", \"min-height\"):\n      result[\"key\"] = \"constraints\";\n      result[\"val\"] = toConstraints(val, decls);\n      break;\n\n    // text decoration style ------------------------\n    case match(key, \"text-decoration-line\"):\n      result[\"key\"] = \"decoration\";\n      result[\"val\"] = `TextDecoration.${toCamel(val)}`;\n      break;\n\n    case match(key, \"text-decoration-color\"):\n      result[\"key\"] = `decorationColor`;\n      result[\"val\"] = toFColor(val);\n      break;\n\n    case match(key, \"text-decoration-style\"):\n      result[\"key\"] = `decorationStyle`;\n      result[\"val\"] = `TextDecorationStyle.${val}`;\n      break;\n\n    case match(key, \"text-align\"):\n      result[\"val\"] = `TextAlign.${val}`;\n      break;\n\n    case match(key, \"font-style\"):\n      result[\"val\"] = `FontStyle.${val}`;\n      break;\n\n    case match(key, \"font-weight\"):\n      result[\"val\"] = toFFontWeight(val);\n      break;\n\n    case match(key, \"font-size\"):\n    case match(key, \"letter-spacing\"):\n      result[\"val\"] = toFunit(val);\n      break;\n\n    case match(key, \"font-family\"):\n      result[\"val\"] = toFFontFamily(val);\n      break;\n\n    // padding margin ------------------------\n    case match(key, \"padding\", \"margin\"):\n      const mainStyleKey = key.replace(/-[a-zA-Z]+$/, \"\");\n      result[\"key\"] = mainStyleKey;\n      result[\"val\"] = toFMarginPadding(mainStyleKey, val, decls);\n      break;\n\n    // align items ------------------------\n    case match(key, \"justify-content\"):\n      result[\"key\"] = \"mainAxisAlignment\";\n      result[\"val\"] = `MainAxisAlignment.${toAxisAlignment(val)}`;\n      break;\n\n    case match(key, \"align-items\"):\n      result[\"key\"] = \"crossAxisAlignment\";\n      result[\"val\"] = `CrossAxisAlignment.${toAxisAlignment(val)}`;\n      break;\n\n    // transform ------------------------\n    case match(key, \"transform\"):\n      result[\"key\"] = \"transform\";\n      result[\"val\"] = toFTransform(val);\n      break;\n\n    // border related ------------------------\n    case match(key, \"border-radius\"):\n      result[\"val\"] = toFBorderRadius(val, decls);\n      result[\"key\"] =\n        result[\"val\"] === \"BoxShape.circle\" ? \"shape\" : \"borderRadius\";\n      break;\n\n    case match(key, \"border\"):\n      result[\"key\"] = \"border\";\n      result[\"val\"] = toFBorder(val, decls);\n      break;\n\n    // box-shadow ------------------------\n    case match(key, \"box-shadow\"):\n      result[\"key\"] = \"boxShadow\";\n      result[\"val\"] = toBoxShadow(val);\n      break;\n\n    // opacity ------------------------\n    case match(key, \"opacity\"):\n      result[\"key\"] = key;\n      result[\"val\"] = val;\n      break;\n\n    default:\n      // Didn't match any test\n      break;\n  }\n\n  // to camel key\n  const camelKey = transfromToCamelKey(key);\n  if (camelKey) result[\"key\"] = camelKey;\n\n  return result;\n};\n\n/////////////////////////////////////////////////////////\n//\n//\tmatch key\n//\n/////////////////////////////////////////////////////////\nconst match = (key, ...rest) => {\n  for (let i = 0; i < rest.length; i++) {\n    if (key === rest[i]) return true;\n    if (inSplitStyles(key, rest[i])) return true;\n  }\n\n  return false;\n};\n\nconst inSplitStyles = (key, sign) => {\n  const subStyles = SPLIT_MAPPING[sign];\n  if (!subStyles) return null;\n\n  for (let i = 0; i < subStyles.length; i++) {\n    if (key === subStyles[i]) return sign;\n  }\n  return null;\n};\n\n/////////////////////////////////////////////////////////\n//\n//\ttransfrom camel key\n//\n/////////////////////////////////////////////////////////\nconst transfromToCamelKey = (key) => {\n  if (key === \"letter-spacing\") {\n    return toCamel(key);\n  }\n\n  if (/^text-decoration.*/gi.test(key)) {\n    return null;\n  }\n\n  if (/^font-[a-zA-Z]+/gi.test(key) || /^text-[a-zA-Z]+/gi.test(key)) {\n    return toCamel(key);\n  }\n\n  return null;\n};\n\nexport default transform;\n","import ppo from \"ppo\";\nimport CodeArr from \"./code-arr\";\nimport transform from \"./transform\";\nimport {\n  CONTAINER,\n  TEXT,\n  CHILDREN,\n  TAB,\n  ROW,\n  COLUMN,\n  CLASS,\n  PROP,\n  PROP2,\n  DECO,\n  OPACITY,\n  POSITIONED,\n  TRANSFORM,\n  REAL_SPACE,\n  CENTER\n} from \"./template\";\n\nclass Widget {\n  constructor(type) {\n    this.children = [];\n    this.type = type;\n    this.decls = null;\n    this.parent = null;\n    this.id = ppo.uuid();\n\n    switch (type) {\n      case \"container\":\n        this.template = CONTAINER;\n        break;\n\n      case \"position\":\n        this.template = POSITIONED;\n        break;\n\n      case \"transform\":\n        this.template = TRANSFORM;\n        break;\n\n      case \"opacity\":\n        this.template = OPACITY;\n        break;\n\n      case \"text\":\n        this.template = TEXT;\n        break;\n\n      case \"center\":\n        this.template = CENTER;\n        break;\n\n      case \"row\":\n        this.template = ROW;\n        break;\n\n      case \"column\":\n        this.template = COLUMN;\n        break;\n\n      default:\n        this.template = CONTAINER;\n    }\n\n    this.codeString = \"\";\n    this.prop = new CodeArr();\n    this.prop2 = new CodeArr();\n    this.decoration = new CodeArr();\n    this.codelines = new CodeArr(this.template.split(/\\n/g));\n  }\n\n  addChild(child) {\n    if (this.children.indexOf(child) < 0) {\n      this.children.push(child);\n      child.parent = this;\n    }\n  }\n\n  addChildTo(parent) {\n    if (this.parent === parent) return;\n\n    const loop = target => {\n      if (!target.parent) {\n        parent.addChild(target);\n      } else {\n        loop(target.parent);\n      }\n    };\n\n    this.root = parent;\n    loop(this);\n  }\n\n  getRoot() {\n    return this.root || this;\n  }\n\n  getDepth() {\n    let depth = 0;\n    const loop = target => {\n      if (target.parent) {\n        depth++;\n        loop(target.parent);\n      }\n    };\n    loop(this);\n\n    return depth;\n  }\n\n  /// set prop --------------------------------\n  setProp(okey, oval) {\n    let { key, val } = transform(okey, oval, this.decls);\n    if (!key) return;\n\n    const code =\n      this.type === \"text\" ? `    ${key}: ${val},` : `${key}: ${val},`;\n    this.prop.add(key, code);\n  }\n\n  /// set prop2 --------------------------------\n  setProp2(okey, oval) {\n    let { key, val } = transform(okey, oval, this.decls);\n    if (!key) return;\n    const code = this.type === \"text\" ? `  ${key}: ${val},` : `${key}: ${val},`;\n    this.prop2.add(key, code);\n  }\n\n  /// set Decoration --------------------------------\n  setDecoration(okey, oval) {\n    let { key, val } = transform(okey, oval, this.decls);\n    if (!key) return;\n\n    const code = `${key}: ${val},`;\n    this.decoration.add(key, code);\n  }\n\n  clearAllPseudoTags() {\n    this.codeString = this.codeString\n      .replace(new RegExp(CHILDREN, \"g\"), \"\")\n      .replace(new RegExp(CLASS, \"g\"), \"\")\n      .replace(new RegExp(PROP, \"g\"), \"\")\n      .replace(new RegExp(PROP2, \"g\"), \"\")\n      .replace(new RegExp(DECO, \"g\"), \"\")\n      .replace(new RegExp(TAB, \"g\"), REAL_SPACE);\n  }\n\n  clearBlankLines() {\n    const codeArr = this.codeString.split(/\\n/g);\n    for (let i = codeArr.length - 1; i >= 0; i--) {\n      const line = codeArr[i].trim();\n      if (!line) codeArr.splice(i, 1);\n    }\n\n    this.codeString = codeArr.join(\"\\n\");\n  }\n\n  /// Convert various elements to CodeString ----------------------------\n  selfToCodeString() {\n    const depth = this.getDepth();\n    //const tabs = child.codelines.getTabs(depth);\n\n    this.codeString = this.codelines.toString(depth);\n  }\n\n  childToCodeString(child) {\n    const childStr = child.toString().trim();\n    this.replaceTag(CHILDREN, `  child: ${childStr}`);\n  }\n\n  propToCodeString() {\n    if (this.prop.isNull()) return;\n    const nspace = this.type === \"text\" ? 0 : 1;\n    this.replaceTag(PROP, this.prop.toString(nspace));\n  }\n\n  prop2ToCodeString() {\n    if (this.prop2.isNull()) return;\n    this.replaceTag(PROP2, this.prop2.toString(0));\n  }\n\n  decorationToCodeString() {\n    if (this.decoration.isNull()) return;\n\n    let decoration = this.decoration.toString(2);\n    decoration = `  decoration: BoxDecoration(\n${decoration}\n  )`;\n\n    this.replaceTag(DECO, decoration);\n  }\n\n  replaceTag(TAG, code) {\n    this.codelines.replaceTag(TAG, code);\n  }\n\n  toString() {\n    if (this.children.length > 0) {\n      if (this.children.length === 1) {\n        const child = this.children[0];\n        this.childToCodeString(child);\n      } else {\n        for (let i = 0; i < this.children; i++) {}\n      }\n    }\n\n    // merge code string\n    this.propToCodeString();\n    this.prop2ToCodeString();\n    this.decorationToCodeString();\n    this.selfToCodeString();\n    this.clearAllPseudoTags();\n    this.clearBlankLines();\n\n    return this.codeString || \"\";\n  }\n}\n\nclass WidgetManager {\n  constructor() {\n    this.cache = {};\n  }\n\n  get({ type, target }) {\n    const { cache } = this;\n    const key = `_${target}.${type}`;\n    if (!cache[key]) cache[key] = new Widget(type);\n    return cache[key];\n  }\n}\n\nexport { Widget, WidgetManager };\n","/////////////////////////////////////////////////////////\n//\n//\tFilter Func\n//\n/////////////////////////////////////////////////////////\nconst isText = key => {\n  if (key.indexOf(\"font\") === 0) {\n    return true;\n  } else if (key.indexOf(\"text-\") === 0) {\n    return true;\n  } else if (key === \"color\" || key === \"letter-spacing\") {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst isDecoration = key => {\n  if (\n    key === \"background-image\" ||\n    key === \"background-color\" ||\n    key === \"border\" ||\n    key === \"box-shadow\"\n  ) {\n    return true;\n  } else if (key.indexOf(\"border\") >= 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst isPositioned = ({ key, val, decls }) => {\n  const position = decls.getVal(\"position\");\n  const hasPosition = position === \"absolute\" || position === \"fixed\";\n\n  const isTLRBAttr =\n    hasPosition &&\n    (key === \"top\" || key === \"left\" || key === \"right\" || key === \"bottom\");\n  const isPositionAttr =\n    key === \"position\" && (val === \"absolute\" || val === \"fixed\");\n\n  if (isTLRBAttr || isPositionAttr) {\n    return true;\n  }\n  return false;\n};\n\nconst isOpacity = ({ key, val, decls }) => {\n  if (key === \"opacity\") return true;\n  return false;\n};\n\nconst isFlex = ({ key, val, decls }) => {\n  if (/^flex/.test(key)) return true;\n  if (key === \"display\" && /flex/gi.test(val)) return true;\n  if (key === \"justify-content\" || key === \"align-items\") return true;\n  return false;\n};\n\nconst isCenter = ({ key, val, decls }) => {\n  if (isFlex({ key, val, decls })) {\n    const alignItems = decls.getVal(\"align-items\");\n    const justifyContent = decls.getVal(\"justify-content\");\n    if (alignItems === \"center\" && justifyContent === \"center\") return true;\n  }\n  return false;\n};\n\nconst isRow = ({ key, val, decls }) => {\n  if (isFlex({ key, val, decls })) {\n    const direction = decls.getVal(\"flex-direction\", \"row\");\n    if (direction === \"row\") return true;\n  }\n  return false;\n};\n\nconst isColumn = ({ key, val, decls }) => {\n  if (isFlex({ key, val, decls })) {\n    const direction = decls.getVal(\"flex-direction\", \"row\");\n    if (direction === \"column\") return true;\n  }\n  return false;\n};\n\nconst isTransform = ({ key, val, decls }) => {\n  if (key && /transform$/gi.test(key)) return true;\n  return false;\n};\n\nexport {\n  isText,\n  isDecoration,\n  isPositioned,\n  isOpacity,\n  isTransform,\n  isFlex,\n  isColumn,\n  isCenter,\n  isRow\n};\n","import { Widget, WidgetManager } from \"./widget\";\nimport {\n  isRow,\n  isCenter,\n  isColumn,\n  isText,\n  isDecoration,\n  isPositioned,\n  isOpacity,\n  isTransform\n} from \"./filter\";\n\nconst parseFlutter = decls => {\n  if (!decls || decls.isNull()) return \"\";\n\n  let widget = new Widget(\"container\");\n  widget.decls = decls;\n  const widgetManager = new WidgetManager();\n\n  decls.forEach((decl, index) => {\n    let key = decl[\"key\"];\n    let val = decl[\"val\"];\n\n    /// parent widget ---------------------------------------------\n    // Positioned\n    if (isPositioned({ key, val, decls })) {\n      const parent = widgetManager.get({ target: \"parent\", type: \"position\" });\n      parent.setProp(key, val);\n      widget.addChildTo(parent);\n    }\n\n    // Opacity\n    else if (isOpacity({ key, val, decls })) {\n      const parent = widgetManager.get({ target: \"parent\", type: \"opacity\" });\n      parent.setProp(key, val);\n      widget.addChildTo(parent);\n    }\n\n    // Flex isCenter\n    else if (isCenter({ key, val, decls })) {\n      const parent = widgetManager.get({ target: \"parent\", type: \"center\" });\n      parent.setProp(key, val);\n      widget.addChildTo(parent);\n    }\n\n    // Flex Row\n    else if (isRow({ key, val, decls })) {\n      const parent = widgetManager.get({ target: \"parent\", type: \"row\" });\n      parent.setProp(key, val);\n      widget.addChildTo(parent);\n    }\n\n    // Flex Column\n    else if (isColumn({ key, val, decls })) {\n      const parent = widgetManager.get({ target: \"parent\", type: \"column\" });\n      parent.setProp(key, val);\n      widget.addChildTo(parent);\n    }\n\n    // Transform\n    else if (isTransform({ key, val, decls })) {\n      const parent = widgetManager.get({ target: \"parent\", type: \"transform\" });\n      parent.setProp(key, val);\n      widget.addChildTo(parent);\n    }\n\n    /// child widget ---------------------------------------------\n    // text\n    else if (isText(key)) {\n      const child = widgetManager.get({ target: \"child\", type: \"text\" });\n      const keys = [\"text-align\"];\n      if (keys.indexOf(key) > -1) {\n        child.setProp2(key, val);\n      } else {\n        child.setProp(key, val);\n      }\n      widget.addChild(child);\n    }\n\n    /// self widget ---------------------------------------------\n    // decoration\n    else if (isDecoration(key)) {\n      widget.setDecoration(key, val);\n    }\n\n    // prop\n    else {\n      widget.setProp(key, val);\n    }\n  });\n\n  return widget.getRoot().toString();\n};\n\nexport default parseFlutter;\n","import postcss from \"postcss\";\nimport Message from \"../message/message\";\nimport parseCssDecls from \"./css/parse\";\nimport parseFlutter from \"./flutter/parse\";\n\nconst convert2Flutter = async css => {\n  try {\n    const ast = await postcss([\n      require(\"postcss-transform-shortcut\")({})\n      // require(\"postcss-short-border-radius\")()\n    ]).process(css);\n\n    const decls = await parseCssDecls(ast.root);\n    const flutterStyle = parseFlutter(decls);\n\n    if (flutterStyle !== \"\") Message.success(\"Has been converted successfully!\");\n\n    return flutterStyle;\n  } catch (err) {\n    const msg = dumpLogError(err);\n    Message.error(msg);\n\n    return \"\";\n  }\n};\n\nconst dumpLogError = err => {\n  let msg;\n  if (typeof err === \"object\") {\n    if (err.message) {\n      msg = \"C2F - Message: \" + err.message;\n      console.log(`\\n ${msg}`);\n    }\n    if (err.stack) {\n      msg = msg || \"C2F - Convert css 2 flutter error !\";\n      console.log(\"\\nC2F - Stacktrace:\");\n      console.log(\"====================\");\n      console.log(err.stack);\n    }\n  } else {\n    msg = \"C2F - Convert css 2 flutter error !\";\n    console.log(\"C2F - dumpError :: argument is not an object\");\n  }\n\n  return msg;\n};\n\nexport default convert2Flutter;\n","import React from \"react\";\nimport Coder from \"./coder\";\nimport { Row, Col, Button } from \"antd\";\nimport ResultAlert from \"./result-alert\";\nimport Message from \"../service/message/message\";\nimport convert2Flutter from \"../service/convert/converter\";\n\nclass OperatingArea extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.cssOptions = {\n      mode: \"css\"\n      //theme: 'monokai'\n    };\n\n    this.dartOptions = {\n      mode: \"dart\"\n    };\n\n    this.cssVal = \"\";\n    this.dartVal = \"\";\n  }\n\n  async componentDidMount() {\n    this.cssVal = `\nbackground-color: #e0e0e0;\nwidth: 320px;\nheight: 240px;\nborder:5px solid red;\nfont: 900 24px Georgia;\npadding: 2px 10px;\nmargin: 3px;\nborder-radius: 10px;\ntext-decoration: underline wavy red;\n    `.trim();\n\n    await this.convertAndUpdateDartCoder();\n  }\n\n  clearBtnClickHandler(e) {\n    this.updateCoder({ cssVal: \"\", dartVal: \"\" });\n    Message.success(\"Cleared successfully\");\n  }\n\n  async convertBtnClickHandler(e) {\n    await this.convertAndUpdateDartCoder();\n  }\n\n  codeChangeHadler(value) {\n    this.cssVal = value;\n  }\n\n  async convertAndUpdateDartCoder() {\n    const dartVal = await convert2Flutter(this.cssVal);\n    this.updateCoder({ dartVal });\n  }\n\n  updateCoder({ cssVal, dartVal }) {\n    if (dartVal !== undefined && dartVal !== null) this.dartVal = dartVal;\n    if (cssVal !== undefined && cssVal !== null) this.cssVal = cssVal;\n\n    this.setState({});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <ResultAlert />\n        <Row>\n          <Col span={12} className=\"coder-con\">\n            <div className=\"coder-title\">Css</div>\n            <Coder\n              options={this.cssOptions}\n              value={this.cssVal}\n              onChange={this.codeChangeHadler.bind(this)}\n            />\n          </Col>\n\n          <Col span={12} className=\"coder-con\">\n            <div className=\"coder-title\">Flutter</div>\n            <Coder options={this.dartOptions} value={this.dartVal} />\n          </Col>\n        </Row>\n\n        <Row className=\"btns\">\n          <Button type=\"danger\" onClick={this.clearBtnClickHandler.bind(this)}>\n            Clear\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={this.convertBtnClickHandler.bind(this)}\n          >\n            Convert\n          </Button>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default OperatingArea;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Logo from \"./components/logo\";\nimport OperatingArea from \"./components/operating-area\";\n\nimport \"./App.css\";\n\nconst { Content } = Layout;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Content>\n          <Logo />\n          <OperatingArea />\n          <div id=\"avator\"></div>\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}